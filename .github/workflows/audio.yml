name: Generate Audio Branch
on:
  push:
    branches:
      - 'main'
permissions:
  contents: write
  actions: write
jobs:
  run_docker_audio:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '"audio"')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Extract UUID and File from Commit Message
        id: extract_info
        run: |
          COMMIT_MESSAGE='${{ github.event.head_commit.message }}'
          UUID_IDENTIFIER=$(echo "$COMMIT_MESSAGE" | jq -r '.audio.uuid')
          FILE_IDENTIFIER=$(echo "$COMMIT_MESSAGE" | jq -r '.audio.file')
          VOICE=$(echo "$COMMIT_MESSAGE" | jq -r '.audio.voice')
          LANGUAGE=$(echo "$COMMIT_MESSAGE" | jq -r '.audio.language')
          FILE_ID=$(echo "$COMMIT_MESSAGE" | jq -r '.audio.fileId')
          TOKEN_GH=$(echo "$COMMIT_MESSAGE" | jq -r '.audio.token')
          echo "UUID: $UUID_IDENTIFIER"
          echo "File: $FILE_IDENTIFIER"
          echo "Voice: $VOICE"
          echo "Language: $LANGUAGE"
          echo "File ID: $FILE_ID"
          echo "UUID_IDENTIFIER=$UUID_IDENTIFIER" >> $GITHUB_ENV
          echo "FILE_IDENTIFIER=$FILE_IDENTIFIER" >> $GITHUB_ENV
          echo "VOICE=$VOICE" >> $GITHUB_ENV
          echo "LANGUAGE=$LANGUAGE" >> $GITHUB_ENV
          echo "FILE_ID=$FILE_ID" >> $GITHUB_ENV
      - name: Run cat file
        run: |
          cat ${{ github.workspace }}/$UUID_IDENTIFIER/$FILE_IDENTIFIER
      - name: Split file into parts of 30 lines
        run: |
          mkdir -p ${{ github.workspace }}/split_files
          split -l 4000 ${{ github.workspace }}/$UUID_IDENTIFIER/$FILE_IDENTIFIER ${{ github.workspace }}/split_files/part_
          ls -l ${{ github.workspace }}/split_files      
      - name: Create and switch to audio branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b audio-${UUID_IDENTIFIER}
          git push origin audio-${UUID_IDENTIFIER}
      - name: Commit split files to audio branch
        run: |
          cd ${{ github.workspace }}/split_files
          git checkout audio-${UUID_IDENTIFIER}
          git add .
          git commit -m '${{ github.event.head_commit.message }}'
          git push origin audio-${UUID_IDENTIFIER}
      - name: Trigger next workflow
        run: |
          curl -X POST -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/audio_worker.yml/dispatches \
          -d '{"ref": "audio-${{ env.UUID_IDENTIFIER }}"}'
