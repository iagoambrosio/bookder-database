name: Generate Audio
on:
  push:
    branches:
      - 'main'
jobs:
  run_docker_audio:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '"audio"')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache Docker Image
        uses: actions/cache@v3
        with:
          path: /tmp/audio-image.tar
          key: ${{ runner.os }}-audio-image

      - name: Load Cached Docker Image (se existir)
        run: |
          if [ -f /tmp/audio-image.tar ]; then
            docker load -i /tmp/audio-image.tar
            echo "Imagem carregada do cache!"
          else
            echo "Cache nÃ£o encontrado, baixando a imagem..."
            docker pull iago0silva/audio:v1
            docker save -o /tmp/audio-image.tar iago0silva/audio:v1
          fi
      - name: Extract UUID and File from Commit Message
        id: extract_info
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          UUID_IDENTIFIER=$(echo "$COMMIT_MESSAGE" | jq -r '.audio.uuid')
          FILE_IDENTIFIER=$(echo "$COMMIT_MESSAGE" | jq -r '.audio.file')
          echo "UUID: $UUID_IDENTIFIER"
          echo "File: $FILE_IDENTIFIER"
          echo "UUID_IDENTIFIER=$UUID_IDENTIFIER" >> $GITHUB_ENV
          echo "FILE_IDENTIFIER=$FILE_IDENTIFIER" >> $GITHUB_ENV
      - name: Run Docker Command
        run: |
          docker run -v ${{ github.workspace }}:/app iago0silva/audio:v1 python synthesize.py $UUID_IDENTIFIER/$FILE_IDENTIFIER
      - name: Read Audio File and Send to API
        run: |
          curl -X POST "https://utilitary-api.vercel.app/util/file?uuid=${UUID_IDENTIFIER}&filename=${FILE_IDENTIFIER}" -F "file=@${{ github.workspace }}/${UUID_IDENTIFIER}/${FILE_IDENTIFIER}"
